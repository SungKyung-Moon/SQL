- 👀  L1,L2,L3 pv와 clicks 추출 코드

WITH tot_kwd as (
    -- 일별 SRP 유입 총 키워드 수 
    SELECT weekofyear(from_unixtime(unix_timestamp(dt ,'yyyyMMdd'), 'yyyy-MM-dd')) as date_weekofyear 
        , dt
        , keyword
        , sum(pv) pv
        , sum(ss)
        , sum(clicks) clicks
    FROM search_analytics.g_search_kwd
    WHERE dt >= ${dt1} and dt <= ${dt2}
    GROUP BY dt, keyword
)


SELECT total.dt as dt
    -- 전체 SRP
    , total.total_keyword_counts as total_keyword_counts
    , total.total_pv as total_pv
    , total.total_clicks as total_clicks
    --L1
    , l1.l1_keyword_counts as l1_keyword_counts
    , l1.l1_pv as l1_pv
    , l1.l1_clicks as l1_clicks
    --L2
    , l2.l2_keyword_counts as l2_keyword_counts
    , l2.l2_pv as l2_pv
    , l2.l2_clicks as l2_clicks
    --L3
    , l3.l3_keyword_counts as l3_keyword_counts
    , l3.l3_pv as l3_pv
    , l3.l3_clicks as l3_clicks

FROM (-- 전체 SRP의 pv, clicks
    SELECT dt
        , count(distinct keyword) total_keyword_counts
        , sum(pv) total_pv
        , sum(clicks) total_clicks
    FROM tot_kwd
    GROUP BY dt
) total

JOIN (
    SELECT l1_dt.dt as dt
        , count(DISTINCT l1_dt.l1_keyword) as l1_keyword_counts
        , sum(l1_dt.l1_pv) as l1_pv
        , sum(l1_dt.l1_clicks) as l1_clicks
    FROM (
        -- L1에 해당하는 키워드의 dt별 pv, clicks
        SELECT l1_kwd_list.keyword as l1_keyword
            , dt_total.dt as dt
            , dt_total.pv as l1_pv
            , dt_total.clicks as l1_clicks
        FROM (
            -- 주차별 L1 키워드 목록
            SELECT weekofyear(from_unixtime(unix_timestamp(dt ,'yyyyMMdd'), 'yyyy-MM-dd')) as date_weekofyear -- 날짜별 week 구분
                    , keyword
            FROM search_analytics.g_search_kwd
            WHERE dt>=20210822 and dt<=20210905  -- ★ 조회하고자 하는 일자가 속한 주(week)의 월요일 &  일요일 날짜
            GROUP BY weekofyear(from_unixtime(unix_timestamp(dt ,'yyyyMMdd'), 'yyyy-MM-dd')), keyword
            HAVING sum(ss)>=100
        ) l1_kwd_list
        
        JOIN (SELECT date_weekofyear, dt, keyword, pv, clicks FROM tot_kwd
        ) dt_total on l1_kwd_list.date_weekofyear=dt_total.date_weekofyear and l1_kwd_list.keyword=dt_total.keyword
    ) l1_dt
    GROUP BY l1_dt.dt
) l1 on total.dt = l1.dt

JOIN (
    SELECT l2_dt.dt as dt
        , count(DISTINCT l2_dt.l2_keyword) as l2_keyword_counts
        , sum(l2_dt.l2_pv) as l2_pv
        , sum(l2_dt.l2_clicks) as l2_clicks
    FROM (
        -- L2에 해당하는 키워드의 dt별 pv, clicks
        SELECT l2_kwd_list.keyword as l2_keyword
            , dt_total.dt as dt
            , dt_total.pv as l2_pv
            , dt_total.clicks as l2_clicks
        FROM (
            -- 주차별 L2 키워드 목록
            SELECT weekofyear(from_unixtime(unix_timestamp(dt ,'yyyyMMdd'), 'yyyy-MM-dd')) as date_weekofyear -- 날짜별 week 구분
                    , keyword
            FROM search_analytics.g_search_kwd
            WHERE dt>=20210822 and dt<=20210905  -- ★ 조회하고자 하는 일자가 속한 주(week)의 월요일 &  일요일 날짜
            GROUP BY weekofyear(from_unixtime(unix_timestamp(dt ,'yyyyMMdd'), 'yyyy-MM-dd')), keyword
            HAVING sum(ss)>=20
        ) l2_kwd_list
        
        JOIN (SELECT date_weekofyear, dt, keyword, pv, clicks FROM tot_kwd
        ) dt_total on l2_kwd_list.date_weekofyear=dt_total.date_weekofyear and l2_kwd_list.keyword=dt_total.keyword
    ) l2_dt
    GROUP BY l2_dt.dt
) l2 on total.dt = l2.dt

JOIN (
    SELECT l3_dt.dt as dt
        , count(DISTINCT l3_dt.l3_keyword) as l3_keyword_counts
        , sum(l3_dt.l3_pv) as l3_pv
        , sum(l3_dt.l3_clicks) as l3_clicks
    FROM (
        -- L3에 해당하는 키워드의 dt별 pv, ss
        SELECT l3_kwd_list.keyword as l3_keyword
            , dt_total.dt as dt
            , dt_total.pv as l3_pv
            , dt_total.clicks as l3_clicks
        FROM (
            -- 주차별 L3 키워드 목록
            SELECT weekofyear(from_unixtime(unix_timestamp(dt ,'yyyyMMdd'), 'yyyy-MM-dd')) as date_weekofyear -- 날짜별 week 구분
                    , keyword
            FROM search_analytics.g_search_kwd
            WHERE dt>=20210822 and dt<=20210905  -- ★ 조회하고자 하는 일자가 속한 주(week)의 월요일 &  일요일 날짜
            GROUP BY weekofyear(from_unixtime(unix_timestamp(dt ,'yyyyMMdd'), 'yyyy-MM-dd')), keyword
            HAVING sum(ss)>=10
        ) l3_kwd_list
        
        JOIN (SELECT date_weekofyear, dt, keyword, pv, clicks FROM tot_kwd
        ) dt_total on l3_kwd_list.date_weekofyear=dt_total.date_weekofyear and l3_kwd_list.keyword=dt_total.keyword
    ) l3_dt
    GROUP BY l3_dt.dt
) l3 on total.dt = l3.dt
